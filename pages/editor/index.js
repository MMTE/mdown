import Head from 'next/head'
import Image from 'next/image'
import {useEffect, useState} from 'react';
import MarkdownView from 'react-showdown';
import LoginBtn from '/pages/components/login-btn'
import Link from "next/link";
import Navbar from '../components/navbar'
import {useRouter} from 'next/router'

export default function Home() {

    const router = useRouter()
    const [markdown, setMarkdown] = useState('');
    const [isLoading, setLoading] = useState(false)
    const [data, setData] = useState(null)

    useEffect(() => {
        if (!router.query.repo && !router.query.path)
            return
        setLoading(true)
        fetch('/api/github/get-content?repo=' + router.query.repo + '&path=' + router.query.path)
            .then((res) => res.json())
            .then(({data}) => {
                setData(data.details)
                setMarkdown(data.content)
                setLoading(false)
            })

    }, [router.query])

    async function commitFile(event, sha = data.sha) {

        event.preventDefault()

        const data = {
            repo: router.query.repo,
            path: router.query.path,
            file: markdown,
            commit_message: 'hi',
            sha: sha
        }

        const JSONdata = JSON.stringify(data)

        const endpoint = '/api/github/commit'

        const options = {
            // The method is POST because we are sending data.
            method: 'POST',
            // Tell the server we're sending JSON.
            headers: {
                'Content-Type': 'application/json',
            },
            // Body of the request is the JSON data we created above.
            body: JSONdata,
        }

        const response = await fetch(endpoint, options)

        const result = await response.json()

        // alert(`${result}`)

    }

    return (
        <>
            <Head>
                <title>Mdown</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main>

                <Navbar></Navbar>

                <div className='flex flex-row mt-2 px-5'>

                    <div className='flex flex-1 px-5'>
                        <textarea className='w-full h-min-screen'
                                  value={markdown}
                                  onChange={(event) => (setMarkdown(event.target.value))}>
                        </textarea>
                    </div>
                    <div
                        className='flex flex-1 px-5 w-full h-screen navHeight_off overflow-y-scroll hidden flex-col flex-1 w-full py-4 bg-blue-100 md:flex border-r-4 border-blue-100 '>
                        <article className="prose lg:prose-xl w-full">
                            <MarkdownView
                                markdown={markdown}
                                options={{tables: true, emoji: true}}
                            />
                        </article>
                    </div>
                </div>

                <div className='my-20'>
                    <button onClick={commitFile}
                            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        ورود
                    </button>
                </div>
            </main>
        </>
    )
}
